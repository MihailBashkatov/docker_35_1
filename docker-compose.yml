version: '3.9'

services:
  web:
    restart: always
    build: .
    image: course_8
    container_name: course_8
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    links:
      - "db:db"
    networks:
      - dbnet
    volumes:
      - .:/app
      - static_volume:/app/static
    ports:
      - "8000:8000"
    depends_on:
      - db


  db:
    image: postgres:17-alpine
    restart: always
    container_name: psgr
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dbnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5


  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - dbnet


  celery:
    build: .
    command: bash -c "celery -A config worker -l INFO"
    env_file:
      - .env
    networks:
      - dbnet
    depends_on:
      - redis
      - web

  celery_beat:
    build: .
    command: bash -c "celery -A config beat -l INFO -S django"
    env_file:
      - .env
    networks:
      - dbnet
    depends_on:
      - redis
      - web


networks:
  dbnet:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  redis_data: